From 0bb0321a22bb6fc107152821e125f725ff43330a Mon Sep 17 00:00:00 2001
From: Peter Jones <pjones@redhat.com>
Date: Tue, 3 May 2022 17:05:20 -0400
Subject: [PATCH] Also avoid CVE-2022-28737 in verify_image()

PR 446 ("Add verify_image") duplicates some of the code affected by
Chris Coulson's defense in depth patch against CVE-2022-28737 ("pe:
Perform image verification earlier when loading grub").

This patch makes the same change to the new function.

Signed-off-by: Peter Jones <pjones@redhat.com>

CVE: CVE-2022-28737

Upstream-Status: Backport
[https://github.com/rhboot/shim/commit/159151b6649008793d6204a34d7b9c41221fb4b0]

[OP: - applied changes in shim.c
     - adjusted verify_buffer() context parameter

Signed-off-by: Ovidiu Panait <ovidiu.panait@windriver.com>
Signed-off-by: Yi Zhao <yi.zhao@windriver.com>
---
 shim.c | 42 +++++++++++++++++++++++++-----------------
 1 file changed, 25 insertions(+), 17 deletions(-)

diff --git a/shim.c b/shim.c
index 7f004cdb..eaf5f0fc 100644
--- a/shim.c
+++ b/shim.c
@@ -1421,7 +1421,31 @@ static EFI_STATUS handle_image (void *data, unsigned int datasize,
 	}
 
 	/*
-	 * We only need to verify the binary if we're in secure mode
+	 * Perform the image verification before we start copying data around
+	 * in order to load it.
+	 */
+	if (secure_mode ()) {
+		efi_status = verify_buffer(data, datasize, &context,
+					   sha256hash, sha1hash);
+
+		if (EFI_ERROR(efi_status)) {
+			if (verbose)
+				console_print(L"Verification failed: %r\n", efi_status);
+			else
+				console_error(L"Verification failed", efi_status);
+			return efi_status;
+		} else {
+			if (verbose)
+				console_print(L"Verification succeeded\n");
+		}
+	}
+
+	/*
+	 * Calculate the hash for the TPM measurement.
+	 * XXX: We're computing these twice in secure boot mode when the
+	 *  buffers already contain the previously computed hashes. Also,
+	 *  this is only useful for the TPM1.2 case. We should try to fix
+	 *  this in a follow-up.
 	 */
 	efi_status = generate_hash(data, datasize, &context, sha256hash,
 				   sha1hash);
@@ -1441,22 +1465,6 @@ static EFI_STATUS handle_image (void *data, unsigned int datasize,
 	}
 #endif
 
-	if (secure_mode ()) {
-		efi_status = verify_buffer(data, datasize, &context,
-					   sha256hash, sha1hash);
-
-		if (EFI_ERROR(efi_status)) {
-			if (verbose)
-				console_print(L"Verification failed: %r\n", efi_status);
-			else
-				console_error(L"Verification failed", efi_status);
-			return efi_status;
-		} else {
-			if (verbose)
-				console_print(L"Verification succeeded\n");
-		}
-	}
-
 	/* The spec says, uselessly, of SectionAlignment:
 	 * =====
 	 * The alignment (in bytes) of sections when they are loaded into
-- 
2.25.1

